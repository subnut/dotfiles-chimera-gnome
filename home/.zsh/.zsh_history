ls
doas apk add fzf
ls
nvim .zsh/aliases.zsh
man zfsconcepts
ssh-keygen
cd
g clone git@github.com:subnut/dotfiles-chimera-gnome.git dotfiles
cd dotfiles
ls
ginit
echo $XDG_CONFIG_HOME
doas nvim /etc/profile.d/xdg.sh
echo $XDG_CONFIG_HOME
g clone git@github.com:subnut/dotfiles-chimera-gnome.git dotfiles
cd dotfiles
ginit
gp
ls
exec zsh
man zshmodules
gsts
gc
gcm First commit ?
exec zsh
gcm First commit ?
nvim save
cd Projects
g clone https://github.com/chimera-linux/cports
cd ~dotfiles
ls
nvim save
nvim .gitignore
gsts
g checkout -B dev
g rebase dev
gl
gpfwl
cd ~cports
cbuild
ls
doas zfs create zroot/HOME/chimera/Projects/cports; doas chown -R chimera:chimera ~/Projects/cports
git clone https://github.com/chimera-linux/cports
cd ~cports
cbuild keygen
cbuild binary-bootstrap
mv -v .zshrc .zsh
ln -s .zsh/.zshrc .zshrc
nvim .zshrc
bat -l zsh /usr/share/zsh/functions/Completion/Unix/_env
bat -l zsh /usr/share/zsh/functions/Completion/Unix/_cat
cd ~dotfiles
gds
gcm Added custom ZSH completions dir
ln -s .zsh/.zshrc .zshrc
gsts
cd -2
cd
man zshopts
man zshoptions
setopt PRINT_EXIT_VALUE
cd dotfiles
save
gsts
cd cports
cbuild binary-bootstrap
gsts
apk search python3
doas apk add python-pip
doas apk add pipx
pipx install flake8
touch template.pyo
touch template.py
ls
nvim template.py
cbuild install contrib/tlp
ls
cbuild install contrib/tlp
cbuild install contrib/lf
cbuild install contrib/lf
cbuild pkg contrib/lf
ls
man apk
cd
doas cp -v ~cports/etc/keys/sn03.general@gmail.com-6555191d.rsa.pub /etc/apk/keys/
doas apk add -X packages/contrib lf
doas apk add -X packages/contrib --virtual lf lf lf-doc
doas apk add -X packages/contrib lf
doas vim /etc/apk/repositories.d/02-repo-cports-contrib.list
doas nvim /etc/apk/repositories.d/02-repo-cports-contrib.list
nvim src/cbuild/core/template.py
cbuild pkg contrib/lf
cbuild pkg -f contrib/lf
cbuild clean
cbuild pkg contrib/lf
g remote add github "git@github.com:subnut/$(basename $(git rev-parse --show-toplevel)).git"
gp github
cd src
lf ../subnut/.config
lf .config
rg -lF 'options = ["!check"]' | fzf --preview 'bat --style=header-filename --color always {}'
rgh 'install -'
rgl 'install -'
rgl 'install -' | grep -v 'patch$'
rgh 'install -'
cbuild pkg contrib/tlp
cd -
diff -u Makefile.orig Makefile
cd -2
patch <00-Makefile.patch
cp Makefile Makefile.orig
patch <00-Makefile.patch
nvim Makefile
cd .; patch <00-Makefile.patch; cp Makefile Makefile.orig; patch <00-Makefile.patch; nvim Makefile; diff -u Makefile.orig Makefile > ~cports/contrib/tlp/patches/00-Makefile.patch
cbuild -j1 pkg contrib/tlp
cd .; nvim Makefile
nvim contrib/tlp/template.py; cbuild -j1 pkg contrib/tlp
cd .; patch <00-Makefile.patch; cp Makefile Makefile.orig; patch <00-Makefile.patch; nvim Makefile; diff -u Makefile.orig Makefile > ~cports/contrib/tlp/patches/00-Makefile.patch
cbuild -j1 pkg contrib/tlp
cd .; nvim Makefile
cd .; patch <00-Makefile.patch; cp Makefile Makefile.orig; patch <00-Makefile.patch; nvim Makefile; diff -u Makefile.orig Makefile > ~cports/contrib/tlp/patches/00-Makefile.patch
nvim contrib/tlp/template.py; cbuild -j1 pkg contrib/tlp
cd .; nvim Makefile
cbuild install contrib/tlp
doas apk add tlp
cd .; patch <00-Makefile.patch; cp Makefile Makefile.orig; patch <00-Makefile.patch; nvim Makefile; diff -u Makefile.orig Makefile > ~cports/contrib/tlp/patches/00-Makefile.patch
lf
cbuild pkg contrib/tlp
cbuild install -j1 contrib/tlp
cbuild -j1 install contrib/tlp
cbuild pkg contrib/tlp
nvim contrib/tlp/template.py; cbuild pkg contrib/tlp
gsts
cbuild pkg contrib/tlp
ls
gp github
gsw -
contrib/tlp; cd -
doas apk add tlp
nvim tlp
cd -
cd
bat tlp
cbuild update-check contrib/tlp
cbuild update-check contrib/lf
nvim
gpfwl
gsts
cd
cbuild pkg contrib/tlp
apk add tlp
doas apk add tlp
doas dinitctl enable tlp
doas dinitctl status
doas dinitctl list
nvim .zsh/aliases.sh

exec zsh
